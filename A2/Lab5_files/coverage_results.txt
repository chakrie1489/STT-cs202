algorithms/arrays/garage.py: A = 100.00%, B = 11.11%
algorithms/arrays/limit.py: A = 87.50%, B = 12.50%
algorithms/arrays/longest_non_repeat.py: A = 77.78%, B = 100.00%
algorithms/arrays/merge_intervals.py: A = 66.67%, B = 29.17%
algorithms/arrays/missing_ranges.py: A = 100.00%, B = 8.33%
algorithms/arrays/n_sum.py: A = 100.00%, B = 1.56%
algorithms/arrays/rotate.py: A = 96.43%, B = 96.43%
algorithms/arrays/summarize_ranges.py: A = 92.86%, B = 14.29%
algorithms/arrays/three_sum.py: A = 95.24%, B = 4.76%
algorithms/automata/dfa.py: A = 91.67%, B = 91.67%
algorithms/backtrack/add_operators.py: A = 95.00%, B = 5.00%
algorithms/backtrack/letter_combination.py: A = 91.67%, B = 100.00%
algorithms/backtrack/palindrome_partitioning.py: A = 60.00%, B = 100.00%
algorithms/backtrack/pattern_match.py: A = 94.12%, B = 5.88%
algorithms/backtrack/permute.py: A = 100.00%, B = 12.50%
algorithms/bfs/maze_search.py: A = 96.30%, B = 11.11%
algorithms/bfs/shortest_distance_from_all_buildings.py: A = 14.81%, B = 88.89%
algorithms/bfs/word_ladder.py: A = 96.88%, B = 87.50%
algorithms/bit/flip_bit_longest_sequence.py: A = 100.00%, B = 6.67%
algorithms/bit/has_alternative_bit.py: A = 93.75%, B = 12.50%
algorithms/sort/bitonic_sort.py: A = 95.83%, B = 4.17%
algorithms/sort/bogo_sort.py: A = 84.21%, B = 10.53%
algorithms/sort/bubble_sort.py: A = 85.00%, B = 5.00%
algorithms/sort/cocktail_shaker_sort.py: A = 84.21%, B = 5.26%
algorithms/sort/counting_sort.py: A = 83.33%, B = 5.56%
algorithms/sort/cycle_sort.py: A = 90.91%, B = 4.54%
algorithms/sort/heap_sort.py: A = 84.31%, B = 7.84%
algorithms/sort/insertion_sort.py: A = 6.67%, B = 6.67%
algorithms/sort/pancake_sort.py: A = 90.91%, B = 9.09%
algorithms/sort/quick_sort.py: A = 86.96%, B = 13.04%
algorithms/sort/radix_sort.py: A = 85.71%, B = 4.76%
algorithms/sort/selection_sort.py: A = 78.57%, B = 7.14%
algorithms/sort/sort_colors.py: A = 0.00%, B = 80.00%
algorithms/sort/stooge_sort.py: A = 11.11%, B = 55.56%
algorithms/sort/top_sort.py: A = 90.38%, B = 5.77%
algorithms/sort/wiggle_sort.py: A = 0.00%, B = 55.56%
algorithms/stack/is_consecutive.py: A = 69.70%, B = 78.79%
algorithms/stack/is_sorted.py: A = 93.75%, B = 6.25%
algorithms/stack/longest_abs_path.py: A = 0.00%, B = 100.00%
algorithms/stack/ordered_stack.py: A = 95.83%, B = 100.00%
algorithms/stack/remove_min.py: A = 93.75%, B = 6.25%
algorithms/stack/simplify_path.py: A = 100.00%, B = 9.09%
algorithms/stack/stack.py: A = 87.80%, B = 95.12%
algorithms/stack/switch_pairs.py: A = 100.00%, B = 100.00%
algorithms/stack/valid_parenthesis.py: A = 100.00%, B = 100.00%
algorithms/strings/breaking_bad.py: A = 98.11%, B = 100.00%
algorithms/strings/contain_string.py: A = 81.82%, B = 9.09%
algorithms/strings/count_binary_substring.py: A = 8.33%, B = 8.33%
algorithms/strings/domain_extractor.py: A = 87.50%, B = 100.00%
algorithms/strings/first_unique_char.py: A = 77.78%, B = 11.11%
algorithms/strings/fizzbuzz.py: A = 80.95%, B = 95.24%
algorithms/strings/is_palindrome.py: A = 96.08%, B = 19.61%
algorithms/strings/knuth_morris_pratt.py: A = 95.83%, B = 8.33%
algorithms/strings/longest_common_prefix.py: A = 89.47%, B = 100.00%
algorithms/strings/longest_palindromic_substring.py: A = 95.24%, B = 100.00%
algorithms/strings/make_sentence.py: A = 90.00%, B = 20.00%
algorithms/strings/merge_string_checker.py: A = 83.33%, B = 91.67%
algorithms/strings/multiply_strings.py: A = 78.95%, B = 78.95%
algorithms/strings/one_edit_distance.py: A = 81.82%, B = 100.00%
algorithms/strings/rabin_karp.py: A = 93.55%, B = 16.13%
algorithms/strings/repeat_string.py: A = 81.82%, B = 9.09%
algorithms/strings/reverse_vowel.py: A = 91.67%, B = 8.33%
algorithms/strings/reverse_words.py: A = 78.57%, B = 21.43%
algorithms/strings/roman_to_int.py: A = 81.82%, B = 18.18%
algorithms/strings/strip_url_params.py: A = 9.23%, B = 9.23%
algorithms/strings/strong_password.py: A = 81.82%, B = 9.09%
algorithms/strings/text_justification.py: A = 97.78%, B = 2.22%
algorithms/strings/validate_coordinates.py: A = 68.18%, B = 90.91%
algorithms/tree/b_tree.py: A = 88.08%, B = 90.07%
algorithms/tree/binary_tree_paths.py: A = 0.00%, B = 46.15%
algorithms/tree/construct_tree_postorder_preorder.py: A = 83.33%, B = 76.19%
algorithms/tree/invert_tree.py: A = 0.00%, B = 50.00%
algorithms/tree/is_balanced.py: A = 0.00%, B = 66.67%
algorithms/tree/is_subtree.py: A = 0.00%, B = 73.68%
algorithms/tree/is_symmetric.py: A = 0.00%, B = 52.00%
algorithms/tree/longest_consecutive.py: A = 0.00%, B = 60.00%
algorithms/tree/lowest_common_ancestor.py: A = 0.00%, B = 50.00%
algorithms/tree/max_path_sum.py: A = 0.00%, B = 72.73%
algorithms/tree/path_sum.py: A = 0.00%, B = 34.29%
algorithms/tree/path_sum2.py: A = 0.00%, B = 40.48%
algorithms/tree/pretty_print.py: A = 0.00%, B = 100.00%
algorithms/tree/same_tree.py: A = 0.00%, B = 83.33%
algorithms/tree/traversal/inorder.py: A = 60.00%, B = 12.50%
algorithms/tree/traversal/level_order.py: A = 0.00%, B = 58.82%
algorithms/tree/traversal/postorder.py: A = 87.10%, B = 12.90%
algorithms/tree/traversal/preorder.py: A = 85.71%, B = 14.29%
algorithms/tree/traversal/zigzag.py: A = 0.00%, B = 57.89%
algorithms/tree/tree.py: A = 0.00%, B = 100.00%
algorithms/unix/path/simplify_path.py: A = 90.91%, B = 100.00%