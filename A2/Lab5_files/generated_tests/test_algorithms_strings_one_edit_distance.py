# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.strings.one_edit_distance as module_0


def test_case_0():
    bytes_0 = b"z\x92\xf0\x8a=\x9b\xde\xd2\xb48"
    bytes_1 = b"j]J\xc7 \x9eQ!ZO\xc0"
    var_0 = module_0.is_one_edit(bytes_1, bytes_0)
    assert var_0 is False


def test_case_1():
    str_0 = "?,\rlgwc"
    var_0 = module_0.is_one_edit(str_0, str_0)
    assert var_0 is False


def test_case_2():
    str_0 = "?,\rlgwc"
    var_0 = module_0.is_one_edit2(str_0, str_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xda*\xf7"
    dict_0 = {}
    var_0 = module_0.is_one_edit(bytes_0, dict_0)
    assert var_0 is False
    bytes_1 = b"e\x82\x96\xaa\xd0V\xef\xdf\xea\xbd\xb2p=\xb3\x05\x81Q`\xf6\n"
    var_1 = module_0.is_one_edit2(bytes_0, bytes_1)
    assert var_1 is False
    var_2 = module_0.is_one_edit2(bytes_1, bytes_1)
    assert var_2 is False
    bool_0 = True
    bool_1 = True
    module_0.is_one_edit2(bool_0, bool_1)


def test_case_4():
    str_0 = "Z-m"
    str_1 = "Zdx"
    var_0 = module_0.is_one_edit2(str_0, str_1)
    assert var_0 is False
    bytes_0 = b"\xad\xf0\x8a=\x9b\xde\xd2\xe68"
    var_1 = module_0.is_one_edit2(bytes_0, str_0)
    assert var_1 is False
    var_2 = module_0.is_one_edit2(str_0, str_0)
    assert var_2 is False


def test_case_5():
    str_0 = "Z-m"
    str_1 = "Px"
    var_0 = module_0.is_one_edit2(str_0, str_1)
    assert var_0 is False
    var_1 = module_0.is_one_edit2(str_0, str_0)
    assert var_1 is False


def test_case_6():
    list_0 = []
    str_0 = "{"
    var_0 = module_0.is_one_edit2(list_0, str_0)
    assert var_0 is False


def test_case_7():
    str_0 = "Z-m"
    str_1 = "\x0bPx"
    var_0 = module_0.is_one_edit2(str_0, str_1)
    assert var_0 is False
    var_1 = module_0.is_one_edit2(str_0, str_0)
    assert var_1 is False


@pytest.mark.xfail(strict=True)
def test_case_8():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    var_0 = module_0.is_one_edit(tuple_0, dict_0)
    assert var_0 is True
    dict_1 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: var_0, tuple_0: dict_0}
    module_0.is_one_edit2(dict_1, var_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "Pi"
    str_1 = "Px"
    var_0 = module_0.is_one_edit(str_0, str_1)
    assert var_0 is True
    var_1 = module_0.is_one_edit2(str_0, str_0)
    assert var_1 is False
    var_2 = module_0.is_one_edit2(str_1, str_0)
    assert var_2 is True
    module_0.is_one_edit(var_0, var_0)
