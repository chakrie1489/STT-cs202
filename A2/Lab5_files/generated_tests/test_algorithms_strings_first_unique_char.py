# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.strings.first_unique_char as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    str_0 = ".-"
    dict_0 = {str_0: bool_0}
    dict_1 = {bool_0: dict_0}
    var_0 = module_0.first_unique_char(dict_1)
    assert var_0 == 0
    module_0.first_unique_char(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "\nGiven an array of meeting time intervals consisting of\nstart and end times [[s1,e1],[s2,e2],...] (si < ei),\ndetermine if a person could attend all meetings.\n\nFor example,\nGiven [[0, 30],[5, 10],[15, 20]],\nreturn false.\n"
    var_0 = module_0.first_unique_char(str_0)
    assert var_0 == 14
    module_0.first_unique_char(var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -1161
    module_0.first_unique_char(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    var_0 = module_0.first_unique_char(tuple_0)
    assert var_0 == -1
    module_0.first_unique_char(var_0)
