# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.strings.merge_string_checker as module_0
import builtins as module_1


def test_case_0():
    str_0 = "@>HA1l"
    var_0 = module_0.is_merge_recursive(str_0, str_0, str_0)
    assert var_0 is False


def test_case_1():
    none_type_0 = None
    var_0 = module_0.is_merge_recursive(none_type_0, none_type_0, none_type_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    module_0.is_merge_iterative(object_0, object_0, object_0)


def test_case_3():
    str_0 = "@>HA1l"
    var_0 = module_0.is_merge_iterative(str_0, str_0, str_0)
    assert var_0 is False


def test_case_4():
    str_0 = " Heap Sort that uses a max heap to sort an array in ascending order\n        Complexity: O(n log(n))\n    "
    var_0 = module_0.is_merge_recursive(str_0, str_0, str_0)
    assert var_0 is False


def test_case_5():
    float_0 = 0.001
    none_type_0 = None
    var_0 = module_0.is_merge_iterative(float_0, none_type_0, none_type_0)
    assert var_0 is False


def test_case_6():
    set_0 = set()
    var_0 = module_0.is_merge_iterative(set_0, set_0, set_0)
    assert var_0 is True
