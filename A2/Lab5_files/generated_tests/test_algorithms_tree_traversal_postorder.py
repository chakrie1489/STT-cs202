# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.tree.traversal.postorder as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.postorder(bool_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.postorder(none_type_0)
    node_0 = module_0.Node(none_type_0)


def test_case_2():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0, none_type_0)
    var_0 = module_0.postorder_rec(node_0)
    var_1 = module_0.postorder(node_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    var_0 = module_0.postorder(none_type_0)
    module_0.postorder_rec(var_0)


def test_case_4():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0, none_type_0)
    var_0 = module_0.postorder(node_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    var_0 = module_0.postorder(none_type_0)
    bool_0 = False
    module_0.postorder_rec(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\xf0|\xf9"
    node_0 = module_0.Node(bytes_0, bytes_0)
    module_0.postorder(node_0)


def test_case_7():
    none_type_0 = None
    var_0 = module_0.postorder(none_type_0)
    var_1 = module_0.postorder_rec(none_type_0)
    var_2 = module_0.postorder_rec(none_type_0)
    node_0 = module_0.Node(none_type_0)
    var_3 = module_0.postorder_rec(node_0)
    node_1 = module_0.Node(none_type_0, right=node_0)
    var_4 = module_0.postorder_rec(node_0)
    var_5 = module_0.postorder(node_1)
    node_2 = module_0.Node(var_2, right=node_0)
    int_0 = -419
    node_3 = module_0.Node(int_0, none_type_0)
    node_4 = module_0.Node(none_type_0)
    var_6 = module_0.postorder_rec(none_type_0)
