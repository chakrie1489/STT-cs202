# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.unix.path.simplify_path as module_0
import builtins as module_1


def test_case_0():
    str_0 = ""
    var_0 = module_0.simplify_path_v2(str_0)
    assert var_0 == "/"


@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = -4166.141 + 819j
    module_0.simplify_path_v2(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    dict_0 = {}
    module_0.simplify_path_v1(dict_0)


def test_case_3():
    str_0 = "\x0c"
    var_0 = module_0.simplify_path_v2(str_0)
    assert var_0 == "/\x0c"


def test_case_4():
    str_0 = ".."
    var_0 = module_0.simplify_path_v2(str_0)
    assert var_0 == "/"


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "."
    var_0 = module_0.simplify_path_v2(str_0)
    assert var_0 == "/"
    str_1 = "K5>UYD0G\rQ."
    var_1 = module_0.simplify_path_v1(str_1)
    module_1.object(**var_0)


def test_case_6():
    str_0 = '\nGiven an absolute path for a file (Unix-style), simplify it.\n\nFor example,\npath = "/home/", => "/home"\npath = "/a/./b/../../c/", => "/c"\n\n* Did you consider the case where path = "/../"?\n    In this case, you should return "/".\n* Another corner case is the path might contain multiple slashes \'/\' together,\n    such as "/home//foo/". In this case, you should ignore redundant\n    slashes and return "/home/foo".\n'
    var_0 = module_0.simplify_path_v2(str_0)
    assert (
        var_0
        == '/\nGiven an absolute path for a file (Unix-style), simplify it.\n\nFor example,\npath = "/home/", => "/home"\npath = "/c/", => "/"?\n    In this case, you should return "/".\n* Another corner case is the path might contain multiple slashes \'/\' together,\n    such as "/home/foo/". In this case, you should ignore redundant\n    slashes and return "/home/foo".\n'
    )
    str_1 = ".."
    var_1 = module_0.simplify_path_v2(str_1)
    assert var_1 == "/"
    var_2 = module_0.simplify_path_v1(str_1)
    var_3 = module_0.simplify_path_v1(var_2)
    var_4 = module_0.simplify_path_v2(var_2)
    assert var_4 == "/home/pakambo/Documents/6th sem/cse202/lab5"
