# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.sort.quick_sort as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "--.-"
    module_0.quick_sort(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 999
    module_0.quick_sort(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "--.-"
    module_0.quick_sort(str_0)


def test_case_3():
    int_0 = 6
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.quick_sort(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "--.-"
    list_0 = [str_0, str_0]
    var_0 = module_0.quick_sort(list_0)
    module_0.quick_sort(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "}l4Q-B0"
    module_0.quick_sort(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "--.-"
    var_0 = module_0.quick_sort_recur(str_0, str_0, str_0, str_0, str_0)
    list_0 = [str_0, str_0]
    set_0 = {str_0, str_0}
    var_1 = module_0.quick_sort(list_0)
    var_2 = module_0.quick_sort(list_0, list_0)
    var_3 = module_0.quick_sort(set_0, var_1)
    module_0.partition(var_3, var_1, var_1)
