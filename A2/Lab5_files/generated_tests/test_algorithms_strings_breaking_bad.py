# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.strings.breaking_bad as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "|$}m3I\t$5|MC\\5}\\"
    var_0 = module_0.match_symbol_1(str_0, str_0)
    var_1 = module_0.bracket(str_0, str_0)
    tree_node_0 = module_0.TreeNode()
    module_0.match_symbol(var_1, var_1)


def test_case_1():
    str_0 = "{96]N7kTr%OV E"
    var_0 = module_0.bracket(str_0, str_0)
    var_1 = module_0.bracket(var_0, str_0)
    var_2 = module_0.match_symbol(var_0, str_0)
    var_3 = module_0.match_symbol_1(var_1, var_2)


def test_case_2():
    str_0 = "|$}m3I\t$5|MC\\5}\\"
    var_0 = module_0.bracket(str_0, str_0)
    var_1 = module_0.match_symbol_1(str_0, str_0)


def test_case_3():
    str_0 = "|$}m3I\t$5|MC\\5}\\"
    var_0 = module_0.bracket(str_0, str_0)


def test_case_4():
    tree_node_0 = module_0.TreeNode()


def test_case_5():
    str_0 = "{96]N7kTr%OV E"
    var_0 = module_0.bracket(str_0, str_0)
    var_1 = module_0.bracket(var_0, str_0)
    var_2 = module_0.match_symbol_1(var_1, var_1)


def test_case_6():
    str_0 = "{96]N7kTr%OV E"
    var_0 = module_0.bracket(str_0, str_0)
    var_1 = module_0.bracket(var_0, str_0)
    var_2 = module_0.bracket(var_1, var_0)
    tree_node_0 = module_0.match_symbol(var_0, str_0)
    dict_0 = module_0.match_symbol_1(var_2, tree_node_0)
    var_3 = module_0.match_symbol(dict_0, var_2)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "$N(1msKlw"
    var_0 = module_0.bracket(str_0, str_0)
    var_1 = module_0.match_symbol_1(str_0, var_0)
    dict_0 = {}
    bytes_0 = b"IE\x07$e\x1d\xcam\x93\xe2\xd3G\x91"
    tree_node_0 = module_0.TreeNode()
    tuple_0 = (dict_0, bytes_0)
    module_0.bracket(tuple_0, dict_0)


def test_case_8():
    str_0 = "|$}m3I\t$5|MC\\5}\\"
    var_0 = module_0.bracket(str_0, str_0)
    var_1 = module_0.match_symbol_1(var_0, var_0)
    var_2 = module_0.match_symbol_1(str_0, var_0)
    var_3 = module_0.bracket(var_2, var_0)
    tree_node_0 = module_0.TreeNode()
    tree_node_1 = module_0.TreeNode()
    tree_node_2 = module_0.TreeNode()


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "{96]N7kTr%OV E"
    var_0 = module_0.bracket(str_0, str_0)
    var_1 = module_0.bracket(var_0, str_0)
    var_2 = module_0.match_symbol_1(var_0, str_0)
    var_3 = module_0.bracket(var_2, str_0)
    var_4 = module_0.match_symbol_1(var_3, str_0)
    var_5 = module_0.match_symbol_1(var_3, str_0)
    var_6 = module_0.match_symbol_1(var_4, var_5)
    var_7 = module_0.bracket(var_6, var_2)
    bool_0 = True
    module_0.match_symbol(bool_0, var_2)
