# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.strings.longest_palindromic_substring as module_0


def test_case_0():
    bytes_0 = b"T\xc9\x03\xf3\\\xd10e\xa7\xda\xb9\x10\x9c"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_1 = [list_0]
    var_0 = module_0.longest_palindrome(list_1)
    var_1 = module_0.longest_palindrome(var_0)


def test_case_1():
    str_0 = "uU"
    var_0 = module_0.longest_palindrome(str_0)
    assert var_0 == "u"


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.longest_palindrome(bool_0)


def test_case_3():
    str_0 = '(^\nCp"D43l!0x'
    var_0 = module_0.longest_palindrome(str_0)
    assert var_0 == "("


def test_case_4():
    str_0 = "zPldHqB\\ssbQIG!#"
    var_0 = module_0.longest_palindrome(str_0)
    assert var_0 == "ss"
