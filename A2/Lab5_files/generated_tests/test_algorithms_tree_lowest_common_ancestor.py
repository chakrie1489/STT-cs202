# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.tree.lowest_common_ancestor as module_0


def test_case_0():
    none_type_0 = None
    var_0 = module_0.lca(none_type_0, none_type_0, none_type_0)


def test_case_1():
    bool_0 = True
    var_0 = module_0.lca(bool_0, bool_0, bool_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"c\xf1\xfa\xfa\xfb.]\xd9\x95a\x08P\x92\x0cTg"
    none_type_0 = None
    bytes_1 = b"\x14\x1b~4\xd9\xb5\x91=j\xf0"
    module_0.lca(bytes_0, none_type_0, bytes_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x14\x1b~4\xd9\xb5\x91=j\xc0"
    none_type_0 = None
    var_0 = module_0.lca(bytes_0, none_type_0, bytes_0)
    assert var_0 == b"\x14\x1b~4\xd9\xb5\x91=j\xc0"
    module_0.lca(bytes_0, none_type_0, none_type_0)
