# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.arrays.n_sum as module_0
import builtins as module_1


def test_case_0():
    list_0 = []
    var_0 = module_0.n_sum(list_0, list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.n_sum(none_type_0, none_type_0, none_type_0)


def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.n_sum(bool_0, list_0, bool_0)


def test_case_3():
    bool_0 = True
    list_0 = [
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
    ]
    float_0 = 3.0
    var_0 = module_0.n_sum(float_0, list_0, float_0)


def test_case_4():
    bool_0 = False
    list_0 = [
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
    ]
    float_0 = 3.0
    var_0 = module_0.n_sum(float_0, list_0, float_0)


def test_case_5():
    bool_0 = True
    list_0 = [
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
        bool_0,
    ]
    float_0 = 3.0
    var_0 = module_0.n_sum(float_0, list_0, bool_0)


def test_case_6():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    float_0 = 3.0
    dict_0 = {}
    var_0 = module_0.n_sum(float_0, list_0, float_0, **dict_0)
    var_1 = module_0.n_sum(bool_0, list_0, bool_0)
    object_0 = module_1.object(*var_0)


def test_case_7():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    float_0 = 3.0
    dict_0 = {}
    var_0 = module_0.n_sum(float_0, list_0, float_0, **dict_0)
    float_1 = -1308.1171311854373
    int_0 = 649
    list_1 = [int_0, bool_0, int_0]
    var_1 = module_0.n_sum(float_1, list_1, float_1)
