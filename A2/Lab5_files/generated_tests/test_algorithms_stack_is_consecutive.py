# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.stack.is_consecutive as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xdf\xd6D(\xd7\xf5H\x07"
    module_0.first_is_consecutive(bytes_0)


def test_case_1():
    bytes_0 = b""
    var_0 = module_0.first_is_consecutive(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xdf\xd6D(\xd7\xf5H\x07"
    module_0.second_is_consecutive(bytes_0)


def test_case_3():
    tuple_0 = ()
    var_0 = module_0.second_is_consecutive(tuple_0)


def test_case_4():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    var_0 = module_0.first_is_consecutive(set_0)
    assert var_0 is True


def test_case_5():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    var_0 = module_0.second_is_consecutive(set_0)
    assert var_0 is True


def test_case_6():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.first_is_consecutive(list_0)
    assert var_0 is False


def test_case_7():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    var_0 = module_0.second_is_consecutive(list_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = 5119
    list_0 = [int_0, int_0]
    var_0 = module_0.first_is_consecutive(list_0)
    assert var_0 is False
    set_0 = set()
    var_1 = module_0.second_is_consecutive(set_0)
    var_2 = module_0.first_is_consecutive(set_0)
    var_3 = var_1.__neg__()
    set_1 = {int_0, var_3, var_0, var_3}
    module_0.second_is_consecutive(set_1)
